//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use chrono::{DateTime, Utc};
use sea_orm::entity::prelude::*;

use crate::{content::ContentType, content_audit::AuditResult};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "audit_result_latest")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub content_id: i32,
    pub last_audited: DateTime<Utc>,
    pub result: AuditResult,
    pub first_available_at: DateTime<Utc>,
    pub content_type: ContentType,
    #[sea_orm(unique)]
    pub content_key: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
